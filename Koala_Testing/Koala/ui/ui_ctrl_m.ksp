{

********* KOALA - AN ADVANCED SCRIPTING LIBRARY FOR KSP DEVELOPERS *********

This file is part of Koala - An advanced scripting library for KSP developers.

Copyright (c) 2016 Davide Magni

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

- Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
- Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer 
in the documentation and/or other materials provided with the distribution.

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

---

CONTACTS

koala@davidemagni.com
www.davidemagni.com
Skype: magneto538
Twitter: magneto538

}  	

macro create_button(#name#, #fam#, x, y, w, h, default, pers_status, txt, pic)
	declare ui_button #name#
	_add_ctrl(#name#, #fam#)	
	_store_pos_data(x, y)
	_store_size_data(w, h)
	USE_CODE_IF_NOT(KOALA_LIGHT_MODE)
	_store_ctrl_text(txt)
	_store_ctrl_pic(pic)
	END_USE_CODE
	_store_def_value(default)
	_store_visibility(get_ui_id(#name#), VISIBLE)	
	_ctrl_type(BUTTONS)

	#name# -> pos_x := x
	#name# -> pos_y := y
	#name# -> width := w
	#name# -> height := h
	#name# -> default_value := default
	#name# -> value := default
	#name# -> picture := pic
	#name# -> text := txt

	if (pers_status = PERSISTENT)
		make_persistent(#name#)
	end if	
	USE_CODE_IF(ENABLE_DEBUG)
		add_menu_item(DEBUG.var_name, !_UI_CTRL_NAMES[_UI_COUNT], _UI_COUNT)
		DEBUG.set_persistence(pers_status)
	END_USE_CODE
end macro

macro create_switch(#name#, #fam#, x, y, w, h, default, pers_status, txt, pic)
	declare ui_switch #name#
	_add_ctrl(#name#, #fam#)	
	_store_pos_data(x, y)
	_store_size_data(w, h)
	USE_CODE_IF_NOT(KOALA_LIGHT_MODE)	
	_store_ctrl_text(txt)	
	_store_ctrl_pic(pic)
	END_USE_CODE
	_store_def_value(default)
	_store_visibility(get_ui_id(#name#), VISIBLE)	
	_ctrl_type(SWITCHES)	

	#name# -> pos_x := x
	#name# -> pos_y := y
	#name# -> width := w
	#name# -> height := h
	#name# -> default_value := default
	#name# -> value := default
	#name# -> picture := pic
	#name# -> text := txt

	if (pers_status = PERSISTENT)
		make_persistent(#name#)
	end if	
	USE_CODE_IF(ENABLE_DEBUG)
		add_menu_item(DEBUG.var_name, !_UI_CTRL_NAMES[_UI_COUNT], _UI_COUNT)
		DEBUG.set_persistence(pers_status)
	END_USE_CODE
end macro

macro create_text_label(#name#, #fam#, x, y, w, h, txt, font, alignment, background)
	declare ui_label #name# (1, 1)
	_add_ctrl(#name#, #fam#)		
	_store_pos_data(x, y)
	_store_size_data(w, h)
	USE_CODE_IF_NOT(KOALA_LIGHT_MODE)	
	_store_ctrl_text(txt)	
	_store_ctrl_font_type(font)	
	_store_ctrl_font_alignment(alignment)		
	_store_ctrl_pic(background)
	END_USE_CODE
	_store_visibility(get_ui_id(#name#), VISIBLE)	
	_ctrl_type(TEXT_LABELS)	

	#name# -> pos_x := x
	#name# -> pos_y := y
	#name# -> width := w
	#name# -> height := h
	#name# -> text := txt
	#name# -> font_type := font
	#name# -> text_alignment := alignment
	#name# -> picture := background

	USE_CODE_IF(ENABLE_DEBUG)
		add_menu_item(DEBUG.var_name, !_UI_CTRL_NAMES[_UI_COUNT], _UI_COUNT)
	END_USE_CODE
end macro

macro create_multirow_text_label(#name#, #fam#, x, y, w, h, txt, font, alignment, background)
	declare ui_label #name# (2, 2)
	_add_ctrl(#name#, #fam#)		
	_store_pos_data(x, y)
	_store_size_data(w, h)
	USE_CODE_IF_NOT(KOALA_LIGHT_MODE)	
	_store_ctrl_font_type(font)	
	_store_ctrl_font_alignment(alignment)		
	_store_ctrl_pic(background)
	END_USE_CODE
	_store_visibility(get_ui_id(#name#), VISIBLE)	
	_ctrl_type(TEXT_LABELS)	

	#name# -> pos_x := x
	#name# -> pos_y := y
	#name# -> width := w
	#name# -> height := h
	#name# -> text := txt
	#name# -> font_type := font
	#name# -> text_alignment := alignment
	#name# -> picture := background

	USE_CODE_IF(ENABLE_DEBUG)
		add_menu_item(DEBUG.var_name, !_UI_CTRL_NAMES[_UI_COUNT], _UI_COUNT)
	END_USE_CODE
end macro

macro create_pic_label(#name#, #fam#, x, y, w, h, pic)
	declare ui_label #name# (1, 1)
	_add_ctrl(#name#, #fam#)
	_store_pos_data(x, y)
	_store_size_data(w, h)
	USE_CODE_IF_NOT(KOALA_LIGHT_MODE)	
	_store_ctrl_pic(pic)
	END_USE_CODE
	_store_visibility(get_ui_id(#name#), VISIBLE)	
	_ctrl_type(PIC_LABELS)	

	#name# -> pos_x := x
	#name# -> pos_y := y
	#name# -> width := w
	#name# -> height := h
	#name# -> text := ""
	#name# -> picture := pic

	USE_CODE_IF(ENABLE_DEBUG)
		add_menu_item(DEBUG.var_name, !_UI_CTRL_NAMES[_UI_COUNT], _UI_COUNT)
	END_USE_CODE
end macro

macro create_slider(#name#, #fam#, x, y, w, h, min, max, default, pers_status, mouse_b, pic)
	declare ui_slider #name# (min, max)
	_add_ctrl(#name#, #fam#)		
	_store_pos_data(x, y)
	_store_size_data(w, h)
	_store_ctrl_bounds(min, max)	
	USE_CODE_IF_NOT(KOALA_LIGHT_MODE)	
	_store_ctrl_pic(pic)	
	END_USE_CODE
	_store_def_value(default)
	_store_visibility(get_ui_id(#name#), VISIBLE)	
	_ctrl_type(SLIDERS)	
	
	#name# -> pos_x := x
	#name# -> pos_y := y
	#name# -> width := w
	#name# -> height := h
	#name# -> default_value := default
	#name# -> value := default
	#name# -> picture := pic
	#name# -> mouse_behaviour := mouse_b

	if (pers_status = PERSISTENT)
		make_persistent(#name#)
	end if	
	USE_CODE_IF(ENABLE_DEBUG)
		add_menu_item(DEBUG.var_name, !_UI_CTRL_NAMES[_UI_COUNT], _UI_COUNT)
		DEBUG.set_persistence(pers_status)
	END_USE_CODE
end macro

macro create_knob(#name#, #fam#, x, y, min, max, default, disp_ratio, pers_status, disp_unit, txt)
	declare ui_knob #name# (min, max, disp_ratio)
	_add_ctrl(#name#, #fam#)	
	_store_pos_data(x, y)
	_store_size_data(0, 0)	
	_store_ctrl_bounds(min, max)	
	USE_CODE_IF_NOT(KOALA_LIGHT_MODE)	
	_store_ctrl_text(txt)	
	END_USE_CODE
	_store_def_value(default)
	_store_visibility(get_ui_id(#name#), VISIBLE)		
	_ctrl_type(KNOBS)
	
	#name# -> pos_x := x
	#name# -> pos_y := y
	#name# -> default_value := default
	#name# -> value := default
	#name# -> unit := disp_unit
	#name# -> text := txt

	set_control_par_str(get_ui_id(#name#), CONTROL_PAR_TEXT, txt)	
	if (pers_status = PERSISTENT)
		make_persistent(#name#)
	end if	
	USE_CODE_IF(ENABLE_DEBUG)
		add_menu_item(DEBUG.var_name, !_UI_CTRL_NAMES[_UI_COUNT], _UI_COUNT)
		DEBUG.set_persistence(pers_status)
	END_USE_CODE
end macro

macro create_menu(#name#, #fam#, x, y, w, h, default, entries, font, alignment, pers_status, pic)
	declare ui_menu #name#
	declare !#name#_entries[entries]
	declare _#name#_COUNT := 0	
	_add_ctrl(#name#, #fam#)		
	_store_pos_data(x, y)
	_store_size_data(w, h)
	_store_ctrl_bounds(0, entries-1)	
	USE_CODE_IF_NOT(KOALA_LIGHT_MODE)	
	_store_ctrl_font_type(font)	
	_store_ctrl_font_alignment(alignment)	
	_store_ctrl_pic(pic)
	END_USE_CODE
	_store_def_value(default)
	_store_visibility(get_ui_id(#name#), VISIBLE)	
	_ctrl_type(MENUS)
	
	#name# -> pos_x := x
	#name# -> pos_y := y
	#name# -> width := w
	#name# -> height := h
	#name# -> default_value := default
	#name# -> value := default
	#name# -> font_type := font
	#name# -> picture := pic
	#name# -> text_alignment := alignment

	if (pers_status = PERSISTENT)
		make_persistent(#name#)
	end if	
	USE_CODE_IF(ENABLE_DEBUG)
		add_menu_item(DEBUG.var_name, !_UI_CTRL_NAMES[_UI_COUNT], _UI_COUNT)
		DEBUG.set_persistence(pers_status)
	END_USE_CODE
end macro

macro create_value_edit(#name#, #fam#, x, y, w, min, max, default, disp_ratio, pers_status, font, pic)
	declare ui_value_edit #name# (min, max, disp_ratio)
	_add_ctrl(#name#, #fam#)	
	_store_pos_data(x, y)
	_store_size_data(w, 0)
	_store_ctrl_bounds(min, max)	
	USE_CODE_IF_NOT(KOALA_LIGHT_MODE)			
	_store_ctrl_font_type(font)		
	_store_ctrl_pic(pic)	
	END_USE_CODE
	_store_def_value(default)
	_store_visibility(get_ui_id(#name#), VISIBLE)	
	_ctrl_type(VALUE_EDITS)
	
	#name# -> pos_x := x
	#name# -> pos_y := y
	#name# -> width := w
	#name# -> default_value := default
	#name# -> value := default
	#name# -> font_type := font
	#name# -> picture := pic
	#name# -> text := ""

	if (pers_status = PERSISTENT)
		make_persistent(#name#)
	end if	
	USE_CODE_IF(ENABLE_DEBUG)
		add_menu_item(DEBUG.var_name, !_UI_CTRL_NAMES[_UI_COUNT], _UI_COUNT)
		DEBUG.set_persistence(pers_status)
	END_USE_CODE
end macro

macro create_file_selector(#name#, #fam#, x, y, w, h, col_width, f_type, root_folder, font)
	declare ui_file_selector #name#
	_add_ctrl(#name#, #fam#)			
	_store_pos_data(x, y)
	_store_size_data(w, h)
	_store_visibility(get_ui_id(#name#), VISIBLE)	
	_ctrl_type(FILE_SELECTOR)
	
	#name# -> pos_x := x
	#name# -> pos_y := y
	#name# -> width := w
	#name# -> height := h
	#name# -> column_width := col_width
	#name# -> file_type := f_type
	#name# -> font_type := font
	#name# -> basepath := root_folder

	USE_CODE_IF(ENABLE_DEBUG)
		add_menu_item(DEBUG.var_name, !_UI_CTRL_NAMES[_UI_COUNT], _UI_COUNT)
	END_USE_CODE
end macro

macro create_table(#name#, #fam#, x, y, w, h, columns, range, pers_status)
	declare ui_table #name#[columns](1, 1, range)
	_add_ctrl(#name#, #fam#)		
	_store_pos_data(x, y)
	_store_size_data(w, h)
	_store_visibility(get_ui_id(#name#), VISIBLE)	
	_ctrl_type(TABLES)	

	#name# -> pos_x := x
	#name# -> pos_y := y
	#name# -> width := w
	#name# -> height := h

	if (pers_status = PERSISTENT)
		make_persistent(#name#)
	end if	
	USE_CODE_IF(ENABLE_DEBUG)
		add_menu_item(DEBUG.var_name, !_UI_CTRL_NAMES[_UI_COUNT], _UI_COUNT)
		DEBUG.set_persistence(pers_status)
	END_USE_CODE
end macro

macro create_level_meter(#name#, #fam#, x, y, w, h, orientation, group, slot, channel, bus)
	declare ui_level_meter #name#
	_add_ctrl(#name#, #fam#)		
	_store_pos_data(x, y)
	_store_size_data(w, h)
	_store_visibility(get_ui_id(#name#), VISIBLE)	
	_ctrl_type(LEVEL_METERS)	

	#name# -> pos_x := x
	#name# -> pos_y := y
	#name# -> width := w
	#name# -> height := h
	#name# -> vertical := orientation
	attach_level_meter(get_ui_id(#name#), group, slot, channel, bus)

	USE_CODE_IF(ENABLE_DEBUG)
		add_menu_item(DEBUG.var_name, !_UI_CTRL_NAMES[_UI_COUNT], _UI_COUNT)
	END_USE_CODE
end macro

macro create_waveform(#name#, #fam#, x, y, w, h, zone_name, zone_flags)
	declare ui_waveform #name#(1,1)
	_add_ctrl(#name#, #fam#)	
	_store_pos_data(x, y)
	_store_size_data(w, h)
	_store_visibility(get_ui_id(#name#), VISIBLE)	
	_ctrl_type(WAVEFORMS)	

	#name# -> pos_x := x
	#name# -> pos_y := y
	#name# -> width := w
	#name# -> height := h	
	attach_zone(#name#, find_zone(zone_name), zone_flags)	

	USE_CODE_IF(ENABLE_DEBUG)
		add_menu_item(DEBUG.var_name, !_UI_CTRL_NAMES[_UI_COUNT], _UI_COUNT)
	END_USE_CODE
end macro

macro create_text_edit(#name#, #fam#, x, y, w, h, txt, font, alignment, background)
	declare ui_text_edit @#name#
	_add_ctrl(#name#, #fam#)		
	_store_pos_data(x, y)
	_store_size_data(w, h)
	USE_CODE_IF_NOT(KOALA_LIGHT_MODE)	
	_store_ctrl_font_type(font)	
	_store_ctrl_text(txt)
	_store_ctrl_font_alignment(alignment)		
	END_USE_CODE
	_store_visibility(get_ui_id(#name#), VISIBLE)	
	_ctrl_type(TEXT_EDITS)	
	
	#name# -> pos_x := x
	#name# -> pos_y := y
	#name# -> width := w
	#name# -> height := h
	#name# -> text := txt
	#name# -> font_type := font
	#name# -> text_alignment := alignment
	#name# -> picture := background

	USE_CODE_IF(ENABLE_DEBUG)
		add_menu_item(DEBUG.var_name, !_UI_CTRL_NAMES[_UI_COUNT], _UI_COUNT)
	END_USE_CODE
end macro

macro create_xy(#name#, #fam#, x, y, w, h, default, cursors, cursors_pic, pers_status, m_behav_x, m_behav_y, m_mode, background)
	declare ui_xy ?#name#[cursors*2]
	_add_ctrl(#name#, #fam#)		
	_store_pos_data(x, y)
	_store_size_data(w, h)		
	_store_visibility(get_ui_id(#name#), VISIBLE)	
	_ctrl_type(XY_PADS)	
	
	#name# -> pos_x := x
	#name# -> pos_y := y
	#name# -> width := w
	#name# -> height := h
	#name# -> picture := background
	#name# -> mouse_behaviour_x := m_behav_x
	#name# -> mouse_behaviour_x := m_behav_y
	#name# -> mouse_mode := m_mode

	for _j := 0 to (cursors*2)-1
		set_control_par_str_arr( get_ui_id(#name#), CONTROL_PAR_CURSOR_PICTURE, cursors_pic, _j)
		?#name#[_j] := default
	end for

	if (pers_status = PERSISTENT)
		make_persistent(#name#)
	end if	
	USE_CODE_IF(ENABLE_DEBUG)
		add_menu_item(DEBUG.var_name, !_UI_CTRL_NAMES[_UI_COUNT], _UI_COUNT)
		DEBUG.set_persistence(pers_status)
	END_USE_CODE
end macro
